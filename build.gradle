println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))

buildscript {
    repositories {
        maven { url 'https://maven.minecraftforge.net/' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'maven-publish'

repositories {
    maven {
        url "$projectDir/../CommonMaven"
    }
    maven {
        url "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        url 'https://dogforce-games.com/maven'
    }
    maven {
        name = "thiakil"
        url = "https://maven.thiakil.com/"
    }
    maven {
        url = "https://maven.theillusivec4.top/"
    }
    maven {
        name 'LDTTeam for Aequivaleo'
        url 'https://ldtteam.jfrog.io/ldtteam/modding'
    }
    maven { // TOP
        name 'tterrag maven'
        url "https://maven.tterrag.com/"
    }
    maven { // Patchouli
        url 'https://maven.blamejared.com'
    }
    flatDir {
        dirs 'deps'
    }
    mavenLocal()
}

version = "0.11.0-alpha"
group = "gigaherz.elementsofpower" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "ElementsOfPower-1.17.1"

java.toolchain.languageVersion = JavaLanguageVersion.of(16)

sourceSets {
    main.resources.srcDirs += 'src/main/generated_resources'
}

minecraft {
    mappings channel: 'official', version: '1.17.1'

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', ''
            property 'forge.logging.console.level', 'debug'

            property 'mixin.env.disableRefMap', 'true'

            mods {
                thismod {
                    source sourceSets.main
                }
            }
        }

        client_nocache {
            parent runs.client

            property 'elementsOfPower.disableCaches', 'true'
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', ''
            property 'forge.logging.console.level', 'debug'

            property 'mixin.env.disableRefMap', 'true'

            mods {
                thismod {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', ''
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'elementsofpower', '--all', '--output', file('src/main/generated_resources/'), '--existing', file('src/main/resources/')

            mods {
                thismod {
                    source sourceSets.main
                }
            }
        }
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.17.1-37.0.73'

    compileOnly fg.deobf("mezz.jei:jei-1.17.1:8.0.0.16:api")
    runtimeOnly fg.deobf("mezz.jei:jei-1.17.1:8.0.0.16")

    runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:1.17.1-5.0.1.0")
    compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:1.17.1-5.0.1.0:api")

    compileOnly fg.deobf("com.ldtteam:aequivaleo:1.17.1-0.1.56-ALPHA:api")
    //compileOnly fg.deobf("com.ldtteam:aequivaleo:1.17.1-0.1.56-ALPHA:vanilla-api")
    runtimeOnly fg.deobf("com.ldtteam:aequivaleo:1.17.1-0.1.56-ALPHA:universal")

    //runtimeOnly fg.deobf("mcjty.theoneprobe:TheOneProbe-1.16:1.16-3.1.4-22")

    implementation fg.deobf("dev.gigaherz.guidebook:Guidebook-1.17.1:3.3.2")

    //runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:1.16.2-47")
    //runtimeOnly fg.deobf("deps:Botania-1.16.3:409")
}

jar {
    from('/') {
        include 'LICENSE.txt'
    }

    manifest {
        attributes([
            "Specification-Title": "elementsofpower",
            "Specification-Vendor": "gigaherz",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"gigaherz",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

tasks.publish.dependsOn build
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId project.archivesBaseName
            from components.java

            //artifact sourceJar
        }
    }

    repositories {
        maven {
            url "$projectDir/../CommonMaven"
        }
    }
}

