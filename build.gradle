plugins {
    id 'java-library'
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.neoforged.gradle.userdev' version '7.0.153'
}

version = "0.16.3-alpha"
group = "dev.gigaherz.elementsofpower"

var  minecraftVersion = project.userDevRuntime.runtimes.map(r -> r.values().first().specification.minecraftVersion)
base {
    archivesName = minecraftVersion.map { "ElementsOfPower-${it}" }
}

java.toolchain.languageVersion = JavaLanguageVersion.of(21)

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}

repositories {
    maven {
        url "$projectDir/../CommonMaven"
    }
    maven { // Patchouli + JEI
        // location of the maven that hosts JEI files since January 2023
        name = "Jared's maven"
        url = "https://maven.blamejared.com/"
    }
    maven {
        name "gigaherz's things"
        url 'https://dogforce-games.com/maven'
    }
    maven {
        name = "thiakil"
        url = "https://maven.thiakil.com/"
    }
    maven {
        url = "https://maven.theillusivec4.top/"
    }
    maven {
        name 'LDTTeam for Aequivaleo'
        url 'https://ldtteam.jfrog.io/ldtteam/modding'
    }
    maven { // TOP
        name 'tterrag maven'
        url "https://maven.tterrag.com/"
    }
    maven {
        name = "OctoStudios"
        url = uri("https://maven.octo-studios.com/releases")
    }
    flatDir {
        dirs 'debugmods'
    }
    mavenLocal()
}

sourceSets {
    main.resources.srcDirs += 'src/main/generated_resources'
}

runs {
    // applies to all the run configs below
    configureEach {
        systemProperty 'forge.logging.markers', '' // 'REGISTRIES'
        systemProperty 'forge.logging.console.level', 'debug'

        workingDirectory project.file('run')

        modSource project.sourceSets.main
    }

    client {
    }

    client_nocache {
        configure ("client")

        systemProperty 'elementsOfPower.disableCaches', 'true'
    }

    server {
    }

    data {
        programArguments.addAll '--mod', 'elementsofpower', '--all', '--output', file('src/main/generated_resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
    }
}

subsystems {
    parchment {
        minecraftVersion="1.21"
        mappingsVersion="2024.07.07"
    }
}

minecraft.accessTransformers.file rootProject.file('src/main/resources/META-INF/accesstransformer.cfg')

dependencies {
    implementation 'net.neoforged:neoforge:21.0.133-beta'

    //compileOnly fg.deobf("mezz.jei:jei-1.20.1-common-api:15.2.0.22")
    //runtimeOnly fg.deobf("mezz.jei:jei-1.20.1-common:15.2.0.22")
    //compileOnly fg.deobf("mezz.jei:jei-1.20.1-forge-api:15.2.0.22")
    //runtimeOnly fg.deobf("mezz.jei:jei-1.20.1-forge:15.2.0.22")

    // https://www.curseforge.com/minecraft/mc-mods/curios/files/4921744
    compileOnly "top.theillusivec4.curios:curios-neoforge:9.0.5+1.21"
    runtimeOnly "top.theillusivec4.curios:curios-neoforge:9.0.5+1.21"

    //compileOnly "com.ldtteam:aequivaleo:1.20.4-0.1.137-ALPHA:api"
    //runtimeOnly "com.ldtteam:aequivaleo:1.20.4-0.1.137-ALPHA"

    //runtimeOnly fg.deobf("mcjty.theoneprobe:TheOneProbe-1.16:1.16-3.1.4-22")

    //implementation fg.deobf("dev.gigaherz.guidebook:Guidebook-1.20.1:3.8.0")

    //runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:1.16.2-47")
    //runtimeOnly fg.deobf("deps:Botania-1.16.3:409")

    //runtimeOnly "deps:trenzalore-neo:4.0.1+mc1.20.4"
    //runtimeOnly "deps:jamd-neo:4.2.2+mc1.20.4"

    //runtimeOnly "deps:architectury:11.1.13-neoforge"
    //runtimeOnly "deps:ToolKit-neoforge:84.0.1"
}

jar {
    from('/') {
        include 'LICENSE.txt'
    }

    manifest {
        attributes([
            "Specification-Title": "elementsofpower",
            "Specification-Vendor": "gigaherz",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": project.version,
            "Implementation-Vendor" :"gigaherz",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

tasks.withType(GenerateModuleMetadata) {
    enabled = false
}

project.afterEvaluate {
    publish.dependsOn('reobfJar')
    publishing {
        publications {
            mavenJava(MavenPublication) {
                artifactId project.archivesBaseName
                from components.java
            }
        }

        repositories {
            if (findProperty("RELEASE") && System.env.giga_maven_host != null) {
                System.out.println("Remote publish enabled on " + System.env.giga_maven_host)
                maven {
                    url System.env.giga_maven_host
                    credentials {
                        username System.env.giga_maven_user
                        password System.env.giga_maven_password
                    }
                }
            }
            else {
                System.out.println("Remote publish disabled.")
                maven {
                    url "$projectDir/../CommonMaven"
                }
            }
        }
    }
}
